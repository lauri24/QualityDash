<!DOCTYPE html>
<html lang="en">
<head>
  <title>Bootstrap Example</title>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
  <link href="/css/d3.geomap.css" rel="stylesheet">
  <link href="//maxcdn.bootstrapcdn.com/font-awesome/4.1.0/css/font-awesome.min.css" rel="stylesheet">
  <link href="//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.1/styles/default.min.css" rel="stylesheet">
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js"></script>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
  <script src="http://code.jquery.com/jquery-1.10.2.js"
	type="text/javascript"></script>
<script src="js/app-ajax.js" type="text/javascript"></script>
<script type="text/javascript" src="http://mbostock.github.com/d3/d3.js"></script>
<script src="http://d3js.org/d3.v3.min.js"></script>
<script type="text/javascript" src="js/gauge.js"></script>
<script type="text/javascript" src="js/d3.geomap.min.js"></script>
<script type="text/javascript" src="js/draggable.js"></script>
<script type="text/javascript" src="js/gradientPie.js"></script>
 <script type="text/javascript" src="js/world.js"></script>
   <script src="http://d3js.org/topojson.v1.min.js"></script>
    <script src="https://cdn.plot.ly/plotly-latest.min.js"></script>
 <script src="http://datamaps.github.io/scripts/datamaps.world.min.js?v=1"></script>
 <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.2.14/angular.min.js"></script>
<script src="http://code.jquery.com/jquery-2.1.0.min.js"></script>
  <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
   <link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
  <link rel="stylesheet" href="/resources/demos/style.css">
<!--http://blocks.org/mccannf/1629644-->
	
	<script>
			<!-- Bar chart-->
	         
			$( function() {
				 $( "#date1" ).datepicker({ dateFormat: "yy-mm-dd",timeFormat:"hh:mm:ss"});
			 } );
			
			$( function() {
			    $( "#date2" ).datepicker({ dateFormat: "yy-mm-dd",timeFormat:"hh:mm:ss"});
			 } );
			 
			function mapChart(divTag,country,measures,extrainfo){
				
			
				var data = [{
				    type: 'scattergeo',
				    mode: 'markers+text',
				    locations: country,
				    marker: {
				        size: [10, 30, 15, 10],
				        color: [10, 20, 40, 50],
				        cmin: 0,
				        cmax: 100,
				        hoverinfo: 'label+percent',
				        colorscale: 'Greens',
				        colorbar: {
				            title: 'Completeness',
				            ticksuffix: '%',
				            showticksuffix: 'first'
				        },
				        line: {
				            color: 'black'
				        }
				      
				    },
				 
				}];

				var layout = {
				    	title:extrainfo,
						'geo': {
				        'scope': 'europe',
				        'resolution': 1000
				    }
				};

			


			      Plotly.plot(divTag, data, layout, {showLink: false});
				
				
			}
			
		
			
			function circleChart(divTag,value,serviceName,country,dqName,info,categType){
				
				 
				var data = [{
					  values: [100-value,value],
					  labels: ['UNCOMPLETENESS',dqName],
					  marker:{  colors:['rgb(215, 56, 24)']},
					  domain: {
					    x: [0, .55]
					  },
					  name: categType,
					  hoverinfo: 'label+percent+name+text',
					  hole: .4,
					  type: 'pie'
					}];

					var layout = {
					  title: country" "+serviceName+" "+country+"<br>"+info,
					  height: 500,
					  width: 500
					
					  
					};
					
				
						Plotly.newPlot(divTag, data, layout);
					
				
				
				
			}
			
			
			
			function barChart(divTag,dataX,dataY,serviceName,extraInfo,info,country){
				var trace1 = {
						  x:dataX,
						  y: dataY,
						  marker:{
						    color: ['rgba(204,204,204,1)', 'rgba(222,45,38,0.8)', 'rgba(204,204,204,1)', 'rgba(204,204,204,1)', 'rgba(204,204,204,1)']
						  },
						  type: 'bar'
						};
		
						var data = [trace1];
		
						var layout = {
						  title:country+" "+serviceName+"<br>"+info
						  
						};
		
						Plotly.newPlot(divTag, data, layout,country);
				
				
			}
			<!-- Line chart-->
			function lineChart(){		
				var data = [
					  {
					    x: ['2013-10-04 22:23:00', '2013-11-04 22:23:00', '2013-12-04 22:23:00'],
					    y: [1, 3, 6],
					    type: 'scatter'
					  }
					];
				Plotly.newPlot('timeSeries', data);
			}
			
			<!-- Heatmap chart-->
			function heatMap(){
				
				var data = [
					  {
					    z: [[1, 20, 30], [20, 1, 60], [30, 60, 1]],
					    type: 'heatmap'
					  }
					];

					Plotly.plot('myDiv', data);
			}
			
			
			
			function updateGauges()
			{
				
			}
			
		

			
			function type(d) {
				  d.value = +d.value; // coerce to number
				  return d;
				}

			<!-- Init all charts-->
			
			function removeChart(divTag){
			    $("#"+divTag).remove();
				alert('Remove');
			}
			function initialize()
			{
				heatMap();
				barChart();
				createGauges();
				lineChart();
				setInterval(updateGauges, 5000);
		
				       
			}
			 
			var app = angular.module('app', []);

			app.directive("addDiv", function($compile){   
			      return{
			        restrict: 'AE',
			        link: function(scope , element,attr){        
			           element.bind("click", function(e){ 
			           var e = document.getElementById("ChartSelect");
			           var strUser = e.options[e.selectedIndex].text;	   
			           
			           var ecountry = document.getElementById("CountrySelect");
			           var country = ecountry.options[ecountry.selectedIndex].text;
			           
			           var eMetricType = document.getElementById("MetricType");
			           var MetricType =eMetricType.options[eMetricType.selectedIndex].text;
			           
			        
			           var date1 = $("#date1").val();
			           
			       
			           var date2 =$("#date2").val();
			           
			           var eserviceGroupName = document.getElementById("service_main_group_name");
			           var serviceGroupName =eserviceGroupName.options[eserviceGroupName.selectedIndex].text;
			       
			           var qMetricType = document.getElementById("Quality_metric_type_name");
			           var qualityMetricName=qMetricType.options[qMetricType.selectedIndex].text;
			           
			       
			           
			           var container;
			           var childNode;
			           
			           
			           
			           if(strUser=="Map"){
			        	   
			        	   $.get('CompletnessController', {
				               option:'3',
				               metric_categ:MetricType,
				               service_group_name:serviceGroupName,
				               country:country,
				               metric_name:qualityMetricName,
				               date1:date1,
				               date2:date2
				        }, function(responseText) {
			        	   
				        	 var country=[];
			                 var measures=[];
							 var extraInfo=[];
				        	 var count=0;
							 var json = jQuery.parseJSON(responseText);
				        	 if (json.length>0) {
				       		
				        		  for(var i = 0; i < json.length; i++) {
									    var obj = json[i];
									    
									    if(count===3){
									    	 var divTag = "divMap_" + new Date().getTime().toString();
								        	   container =   angular.element(document.querySelector("#container"));
									           childNode = $compile('<div class="box"  ng-draggable="dragOptions"  style = "float:left; width: 25%;"><div id="'+divTag+'""></div></div>')(container);
									           container.append(childNode);
								        	   mapChart(divTag,country,measures,json[i-1].qualityMetricTypeComment);
									    	  count=0;
									    }
									    measures.push(obj.measure_amt);
										country.push(obj.country);
										extraInfo.push(obj.qualityMetricTypeComment);
									  	count++;
										
									   
									 	  
				        		  }
				        		 
				        	 }
				        	
			        	   
				        });
			        	   
			        	   
			           }
			           if(strUser=="Bar"){
			        	   
			        	   $.get('CompletnessController', {
				               option:'2',
				               metric_categ:MetricType,
				               service_group_name:serviceGroupName,
				               country:country,
				               metric_name:qualityMetricName,
				               date1:date1,
				               date2:date2
				        }, function(responseText) {
				        
				                 //  var dd = JSON.parse(result);
				                 var dataX=[];
				                 var dataY=[];
								 var extraInfo=[];

								 var json = jQuery.parseJSON(responseText);
					        	 if (json.length>0) {
		              
							               for(var i = 0; i < json.length; i++) {
												    var obj = json[i];
													dataX.push(obj.measure_date);
													dataY.push(obj.measure_amt);
													extraInfo.push(obj.service_main_group_name);
													
													 
													
										  }
							            
							               var divTag = "divBar_" + new Date().getTime().toString();
							        	   container =   angular.element(document.querySelector("#container"));
								           childNode = $compile('<div class="box"  ng-draggable="dragOptions"  style = "float:left; width: 25%;"><div id="'+divTag+'""></div></div>')(container);
								           container.append(childNode);
								       	   barChart(divTag,dataX,dataY,serviceGroupName,extraInfo,obj.qualityMetricTypeComment); 
				        		   
								
				        	 }else{
				        		 alert('No results found for query');
				        	 }
			        	   
			           
				        });
			           }
			           if(strUser=="Circle"){
				        	   
				        	 $.get('CompletnessController', {
					               option:'1',
					               metric_categ:MetricType,
					               service_group_name:serviceGroupName,
					               country:country,
					               metric_name:qualityMetricName,
					               date1:date1,
					               date2:date2
					    		 }, function(responseText) {
					        	 var json = jQuery.parseJSON(responseText);
					        	
					                 //  var dd = JSON.parse(result);
					             
									//	gauges[key].redraw(obj.completness);
									 for(var i = 0; i < json.length; i++) {
									   var obj = json[i];
							
					        		   var divTag = "divDonut_" + new Date().getTime().toString();
						        	   container =   angular.element(document.querySelector("#container"));
							           childNode = $compile('<div class="box"  style = "float:left; width: 25%;"><div id="'+divTag+'"" ></div></div>')(container);
							           container.append(childNode);
							           circleChart(divTag,obj.measure_amt,obj.service_main_group_name,country,qualityMetricName,obj.qualityMetricTypeComment,MetricType);   
									}
					        });
				        	   
			        	   
			        	   
			        	 
			           }
			           
			        	

			           });
			        }
			    };
			   });

			app.controller('firstCtrl', function($scope){
			 
			   
			});
	    
			
			</script>
			<style>
			.box {
    border: 1px solid black;
    height: 500px;
    float:left;
    width:500px;
}
			</style>
<body ng-app="app">

  <div ng-controller="firstCtrl" >
  	<p>Date: <input type="text" id="date1"></p>
	<p>Between: <input type="text" id="date2"></p>
     Chart:  <select id="ChartSelect">
			  <option value="ChartType">Bar</option>
			  <option value="ChartType">Pie</option>
			  <option value="ChartType">Line</option>
			  <option value="ChartType">Heat map</option>
			  <option value="ChartType">Map</option>
			  <option value="ChartType">Circle</option>
		</select>
   	Country:<select id="CountrySelect">
			  <option value="CountryType">EE</option>
			  <option value="CountryType">LT</option>
			  <option value="CountryType">LI</option>
			  <option value="CountryType">GR</option>
	
		</select>
	Service rule
	    <select id="Quality_metric_type_name">
			  <option value="name">CLARITY</option>
			  <option value="name">COMPLETENESS</option>
			  <option value="name">FORMAT  CONFORMANCY</option>
			  <option value="name">UNIQUE IDENTIFIABILITY</option>
			  <option value="name">REFERENTIAL INTEGRITY</option>
			  <option value="name">CONSISTENCY</option>
			  <option value="name">ACCURACY TO SOURCE</option>
			  <option value="name">TIMELINESS</option>
			  <option value="name">UNKNOWN QUALITY METRIC</option>
		
	
		</select>
   Service group name
	    <select id="service_main_group_name">
	    
			  <option value="Service">Regulatory Reporting </option>
			  <option value="Service">Supporting Service</option>
			  <option value="Service">Data in - Internal systems by AM areas</option>
			  <option value="Service">Performance Management </option>
			  <option value="Service">Customer Management</option>
			  <option value="Service">Data in - External companies</option>
			  <option value="Service">DW Application </option>
			  <option value="Service">BB Data Warehouse</option>
			  <option value="Service">BI Infrastructure</option>
			  <option value="Service">Data in - Manual preparation </option>
			  <option value="Service">BI Common Analytical Services</option>
			  <option value="Service">Business Line / Product System</option>
			  <option value="Service">Risk Management </option>
			  <option value="Service">Data Warehouse Service</option>
			  <option value="Service">Unknown quality metric</option>

	
		</select>
	Metric type
	    <select id="MetricType">
			  <option value="Rule">DQKPI</option>
			  <option value="Rule">DQERR</option>
			  <option value="Rule">NA</option>
	
	
		</select>
	
    <button add-div>Click Me</button>
  	   <div ng-app="test" ng-controller="testCtrl">
        <div id="container"></div>
        </div>
      </div>



</body>
</html>
