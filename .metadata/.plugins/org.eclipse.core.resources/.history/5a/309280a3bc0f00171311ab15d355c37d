<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" 
"http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>jQuery, Ajax and Servlet/JSP integration example</title>

<script src="http://code.jquery.com/jquery-1.10.2.js"
	type="text/javascript"></script>
<script src="js/app-ajax.js" type="text/javascript"></script>
<script type="text/javascript" src="http://mbostock.github.com/d3/d3.js"></script>
<script type="text/javascript" src="js/gauge.js"></script>
	<svg width="960" height="500"></svg>
		<!-- Gauge script-->
	<script>
						
				
			var gauges = [];
			
			function createGauge(name, label, min, max)
			{
				var config = 
				{
					size: 100,
					label: label,
					min: undefined != min ? min : 0,
					max: undefined != max ? max : 100,
					minorTicks: 5
				}
				
				var range = config.max - config.min;
				config.yellowZones = [{ from: config.min + range*0.75, to: config.min + range*0.9 }];
				config.redZones = [{ from: config.min + range*0.9, to: config.max }];
				
				gauges[name] = new Gauge(name + "GaugeContainer", config);
				gauges[name].render();
			}
			
			function createGauges()
			{
				createGauge("memory", "Completness");

			}
			
			function updateGauges()
			{
				for (var key in gauges)
				{
				    var completness =100;
				    
				    $.get('CompletnessController', {
		                userName : name
		        }, function(responseText) {
		        	 var obj = jQuery.parseJSON(responseText);
		        	 if (obj) {
		                 //  var dd = JSON.parse(result);
		                 
					gauges[key].redraw(obj.completness);
		        	 }else{
		        		 alert('Wrong')
		        	 }
		        });
				}
			}
			
			function getRandomValue(gauge)
			{
				var overflow = 0; //10;
				return gauge.config.min - overflow + (gauge.config.max - gauge.config.min + overflow*2) *  Math.random();
			}
			
			function initialize()
			{
				createGauges();
				setInterval(updateGauges, 5000);
			}
			
		</script>
		<!-- Chart script-->
		<script>
		$(document).ready(function(){
			function randomDate(start, end) {
		    	return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));
			}
			var svg = d3.select("svg"),
			    margin = {top: 20, right: 20, bottom: 30, left: 50},
			    width = +svg.attr("width") - margin.left - margin.right,
			    height = +svg.attr("height") - margin.top - margin.bottom,
			    g = svg.append("g").attr("transform", "translate(" + margin.left + "," + margin.top + ")");
			
			var parseTime = d3.timeParse("%d-%b-%y");
			
			var x = d3.scaleTime()
			    .rangeRound([0, width]);
			
			var y = d3.scaleLinear()
			    .rangeRound([height, 0]);
			
			var area = d3.area()
			    .x(function(d) { return x(d.date); })
			    .y1(function(d) { return y(d.close); });
			
			
		
			d3.array([1,2,3,4,5], function(d) {
			  d.date = parseTime(d.date);
			  d.close = +d.close;
			  return d;
			}, function(error, data) {
			  if (error) throw error;
			
			  x.domain(d3.extent(data, function(d) { return d.date; }));
			  y.domain([0, d3.max(data, function(d) { return d.close; })]);
			  area.y0(y(0));
			
			  g.append("path")
			      .datum(data)
			      .attr("fill", "steelblue")
			      .attr("d", area);
			
			  g.append("g")
			      .attr("transform", "translate(0," + height + ")")
			      .call(d3.axisBottom(x));
			
			  g.append("g")
			      .call(d3.axisLeft(y))
			    .append("text")
			      .attr("fill", "#000")
			      .attr("transform", "rotate(-90)")
			      .attr("y", 6)
			      .attr("dy", "0.71em")
			      .attr("text-anchor", "end")
			      .text("Price ($)");
			});
		});
</script>
</head>

<body onload="initialize()">

	<br>
	<br>
	<span id="memoryGaugeContainer"></span>

	
	
</body>
</html>