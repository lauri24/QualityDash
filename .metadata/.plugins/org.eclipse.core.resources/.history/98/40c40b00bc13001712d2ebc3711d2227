<!DOCTYPE html>
<html lang="en">
<head>
  <title>Bootstrap Example</title>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
  <link href="/css/d3.geomap.css" rel="stylesheet">
  <link href="//maxcdn.bootstrapcdn.com/font-awesome/4.1.0/css/font-awesome.min.css" rel="stylesheet">
  <link href="//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.1/styles/default.min.css" rel="stylesheet">
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js"></script>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
  <script src="http://code.jquery.com/jquery-1.10.2.js"
	type="text/javascript"></script>
<script src="js/app-ajax.js" type="text/javascript"></script>
<script type="text/javascript" src="http://mbostock.github.com/d3/d3.js"></script>
<script src="http://d3js.org/d3.v3.min.js"></script>
<script type="text/javascript" src="js/gauge.js"></script>
<script type="text/javascript" src="js/d3.geomap.min.js"></script>
<script type="text/javascript" src="js/gradientPie.js"></script>
 <script type="text/javascript" src="js/world.js"></script>
   <script src="http://d3js.org/topojson.v1.min.js"></script>
 <script src="http://datamaps.github.io/scripts/datamaps.world.min.js?v=1"></script>
<!--http://blocks.org/mccannf/1629644-->
		<!-- Gauge script-->
	<script>
						
	
			var gauges = [];
			var salesData=[
				{label:"Correct", color:"#008000", percent:50},
				{label:"Error", color:"#DC3912", percent:50}
			];
		
			
			function createGauge(name, label, min, max)
			{
				var config = 
				{
					size: 160,
					label: label,
					min: undefined != min ? min : 0,
					max: undefined != max ? max : 100,
					minorTicks: 5
				}
				
				var range = config.max - config.min;
				config.yellowZones = [{ from: config.min + range*0.75, to: config.min + range*0.9 }];
				config.redZones = [{ from: config.min + range*0.9, to: config.max }];
				
				gauges[name] = new Gauge(name + "GaugeContainer", config);
				gauges[name].render();
			}
			
			function createGauges()
			{
				createGauge("memory", "Completness");
				
			}
			
			function updateGauges()
			{
				for (var key in gauges)
				{
				    var completness =100;
				    
				    $.get('CompletnessController', {
		                userName : name
		        }, function(responseText) {
		        	 var obj = jQuery.parseJSON(responseText);
		        	 if (obj) {
		                 //  var dd = JSON.parse(result);
		                 
					gauges[key].redraw(obj.completness);
		        	 }else{
		        		 alert('Wrong')
		        	 }
		        });
				}
			}
			
		

		
			//

			function changeData(){
				//gradPie.transition("salespie", randomData(), 160);
				gradPie.transition("quotespie", randomData(), 70);
			}

			function randomData(){
				return salesData.map(function(d){ 
					return {label:d.label, value:d.percent, color:d.color};});
			}
			
			function getRandomValue(gauge)
			{
				var overflow = 0; //10;
				return gauge.config.min - overflow + (gauge.config.max - gauge.config.min + overflow*2) *  Math.random();
			}
			
			function type(d) {
				  d.value = +d.value; // coerce to number
				  return d;
				}

			
			function initialize()
			{
			
				createGauges();
				setInterval(updateGauges, 5000);
				var svg = d3.select("#errorness1").append("svg");
				
				svg.append("g").attr("id","salespie");
				svg.append("g").attr("id","quotespie");
			
				var div = d3.select("#errorness1").append("div").attr("class", "toolTip");
				div.data(randomData());
				
			
			    	gradPie.draw("quotespie", randomData(), 70, 70, 70);
			    	
					 svg.on("mouseover", function(d) {		
						 div.style("left", d3.event.pageX+10+"px");
			                div.style("top", d3.event.pageY-25+"px");
			                div.style("display", "inline-block");
			                div.html("<br>"+d+"%");
				            });					
				        svg.on("mouseout", function(d) {		
				        	   div.style("display", "none");
				        });
				        
				        
				   var data3 = [
				        	  {name: "Acc",    value:  4},
				        	  {name: "Comp",   value:  8},
				        	  {name: "DQ",     value: 15},
				        	  {name: "Diff",   value: 16},
				        	  {name: "-",      value: 23},
				        	  {name: "-",      value: 42}
				        	];
				
				    var width = 960,height = 500;

				  //  var x = d3.scale.linear()
				   //     .domain([0, d3.max(data3, function(d){return d.value;})])
				   //     .range([0, width]);
				  
				  var margin = {top: 20, right: 30, bottom: 30, left: 40},
				    width = 960 - margin.left - margin.right,
				    height = 500 - margin.top - margin.bottom;

				  
				  var x = d3.scale.ordinal()
   						 .rangeRoundBands([0, width], .1)
				         .domain(data3.map(function(d) { return d.name; }));
					     
				  var y = d3.scale.linear()
				   	  .domain([0, d3.max(data3, function(d){return d.value;})])
   					 .range([height, 0]);
				  	 
				  var xAxis = d3.svg.axis()
				    .scale(x)
				    .orient("bottom");
				  
				  
				  
				    var chart = d3.select(".chart")
				         .attr("width", width + margin.left + margin.right)
					     .attr("height", height + margin.top + margin.bottom)
					     .append("g")
   						 .attr("transform", "translate(" + margin.left + "," + margin.top + ")");
				  
				    chart.append("g")
				    .attr("class", "x axis")
				    .attr("transform", "translate(0," + height + ")")
				    .call(xAxis);
				
				    var bar = chart.selectAll("g")
				        .data(data3)
				        .enter().append("g")
				        .attr("transform", function(d) { return "translate(" + x(d.name) + ",0)";});

				    bar.append("rect")
				    	.attr("y",function(d) {return y(d.value);})
				        .attr("width",x.rangeBand()/2)
				        .attr("height",  function(d){return height-y(d.value);});

				    bar.append("text")
				        .attr("x",x.rangeBand()/2)
				        .attr("y", function(d) { return y(d.value)+3; })
				        .attr("dy", ".75em")
				        .text(function(d) { return d.name+" "+d.value; });
				//gradPie.draw("salespie", randomData(), 100, 100, 160);
		
			}
			</script>
  <style>
    /* Set height of the grid so .sidenav can be 100% (adjust as needed) */
    .row.content {height: 550px}
    
    /* Set gray background color and 100% height */
    .chart rect {
  fill: steelblue;
}
.well{
	width:100%;
	height:100%;
}
axis text {
  font: 10px sans-serif;
}

.axis path,
.axis line {
  fill: none;
  stroke: #000;
  shape-rendering: crispEdges;
}
.chart text {
  fill: white;
  font: 10px sans-serif;
  text-anchor: middle;
}
    .sidenav {
      background-color: #f1f1f1;
      height: 100%;
    }

    /* On small screens, set height to 'auto' for the grid */
    @media screen and (max-width: 767px) {
      .row.content {height: auto;} 
    }
  </style>
</head>
<body onload="initialize()">

<nav class="navbar navbar-inverse visible-xs">
  <div class="container-fluid">
    <div class="navbar-header">
      <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#myNavbar">
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>                        
      </button>
      <a class="navbar-brand" href="#">Logo</a>
    </div>
    <div class="collapse navbar-collapse" id="myNavbar">
      <ul class="nav navbar-nav">
        <li class="active"><a href="#">Dashboard</a></li>
        <li><a href="#">Age</a></li>
        <li><a href="#">Gender</a></li>
        <li><a href="#">Geo</a></li>
      </ul>
    </div>
  </div>
</nav>

<div class="container-fluid">
  <div class="row content">
    <div class="col-sm-3 sidenav hidden-xs">
      <h2>Logo</h2>
      <ul class="nav nav-pills nav-stacked">
        <li class="active"><a href="#section1">Dashboard</a></li>
        <li><a href="#section2">Blank1</a></li>
        <li><a href="#section3">Blank2</a></li>
        <li><a href="#section3">Blank3</a></li>
      </ul><br>
    </div>
    <br>
    
    <div class="col-sm-9">
      <div class="well">
        <h4>Dashboard</h4>
        <p>Some text..</p>
      </div>
      <div class="row">
        <div class="col-sm-3">
          <div class="well">
            <h4>Completness</h4>
            <span id="memoryGaugeContainer"></span>
          </div>
        </div>
        <div class="col-sm-3">
          <div class="well">
            <h4>Errorness</h4>
              <div id="errorness1"></div>
          </div>
        </div>
        <div class="col-sm-3">
          <div class="well">
            <h4>Sessions</h4>
          <svg class="chart"></svg>
          </div>
        </div>
        
      <div class="row">
        <div class="col-sm-4">
          <div class="well">
            <p>Text</p> 
            <p>Text</p> 
            <p>Text</p> 
          </div>
        </div>
        <div class="col-sm-4">
          <div class="well">
            <p>Text</p> 
            <p>Text</p> 
            <p>Text</p> 
          </div>
        </div>
        <div class="col-sm-4">
          <div class="well">
            <p>Text</p> 
            <p>Text</p> 
            <p>Text</p> 
          </div>
        </div>
      </div>
      <div class="row">
        <div class="col-sm-8">
          <div class="well">
            <p>Text</p> 
          </div>
        </div>
        <div class="col-sm-4">
          <div class="well">
            <p>Text</p> 
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

</body>
</html>
