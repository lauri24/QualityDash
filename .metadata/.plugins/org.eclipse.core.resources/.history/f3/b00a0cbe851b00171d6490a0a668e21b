<!DOCTYPE html>
<html lang="en">
<head>
  <title>Bootstrap Example</title>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
  <link href="/css/d3.geomap.css" rel="stylesheet">
  <link href="//maxcdn.bootstrapcdn.com/font-awesome/4.1.0/css/font-awesome.min.css" rel="stylesheet">
  <link href="//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.1/styles/default.min.css" rel="stylesheet">
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js"></script>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
  <script src="http://code.jquery.com/jquery-1.10.2.js"
	type="text/javascript"></script>
<script src="js/app-ajax.js" type="text/javascript"></script>
<script type="text/javascript" src="http://mbostock.github.com/d3/d3.js"></script>
<script src="http://d3js.org/d3.v3.min.js"></script>
<script type="text/javascript" src="js/gauge.js"></script>
<script type="text/javascript" src="js/d3.geomap.min.js"></script>
<script type="text/javascript" src="js/draggable.js"></script>
<script type="text/javascript" src="js/gradientPie.js"></script>
 <script type="text/javascript" src="js/world.js"></script>
   <script src="http://d3js.org/topojson.v1.min.js"></script>
    <script src="https://cdn.plot.ly/plotly-latest.min.js"></script>
 <script src="http://datamaps.github.io/scripts/datamaps.world.min.js?v=1"></script>
 <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.2.14/angular.min.js"></script>
<script src="http://code.jquery.com/jquery-2.1.0.min.js"></script>
<!--http://blocks.org/mccannf/1629644-->
	
	<script>
			<!-- Bar chart-->
	         
			
			function mapChart(divTag){
				
				$( function() {
				    $( "#date1" ).datepicker();
				  } );
				$( function() {
				    $( "#date2" ).datepicker();
				  } )
				var data = [{
				    type: 'scattergeo',
				    mode: 'markers',
				    locations: ['EST', 'LVA', 'LTU','GRC'],
				    marker: {
				        size: [10, 30, 15, 10],
				        color: [10, 20, 40, 50],
				        cmin: 0,
				        cmax: 100,
				        colorscale: 'Greens',
				        colorbar: {
				            title: 'Completeness',
				            ticksuffix: '%',
				            showticksuffix: 'first'
				        },
				        line: {
				            color: 'black'
				        }
				    },
				 
				}];

				var layout = {
				    'geo': {
				        'scope': 'europe',
				        'resolution': 1000
				    }
				};

			


			      Plotly.plot(divTag, data, layout, {showLink: false});
				
				
			}
			
			
			
			function circleChart(divTag,value,serviceName,country){
				
				
				var data = [{
					  values: [100-value,value],
					  labels: ['BAD','FORMAT CONFORMACY'],
					  marker:{  colors:['rgb(215, 56, 24)']},
					  domain: {
					    x: [0, .55]
					  },
					  name: 'KPI',
					  hoverinfo: 'label+percent+name',
					  hole: .4,
					  type: 'pie'
					}];

					var layout = {
					  title: serviceName+" "+country,
					  height: 500,
					  width: 500
					};

					Plotly.newPlot(divTag, data, layout);
				
				
			}
			
			
			
			function barChart(divTag,dataX,dataY,serviceName){
				var trace1 = {
						  x:dataX,
						  y: dataY,
						  marker:{
						    color: ['rgba(204,204,204,1)', 'rgba(222,45,38,0.8)', 'rgba(204,204,204,1)', 'rgba(204,204,204,1)', 'rgba(204,204,204,1)']
						  },
						  type: 'bar'
						};
		
						var data = [trace1];
		
						var layout = {
						  title:serviceName
						};
		
						Plotly.newPlot(divTag, data, layout);
				
				
			}
			<!-- Line chart-->
			function lineChart(){		
				var data = [
					  {
					    x: ['2013-10-04 22:23:00', '2013-11-04 22:23:00', '2013-12-04 22:23:00'],
					    y: [1, 3, 6],
					    type: 'scatter'
					  }
					];
				Plotly.newPlot('timeSeries', data);
			}
			
			<!-- Heatmap chart-->
			function heatMap(){
				
				var data = [
					  {
					    z: [[1, 20, 30], [20, 1, 60], [30, 60, 1]],
					    type: 'heatmap'
					  }
					];

					Plotly.plot('myDiv', data);
			}
			
			
			var gauges = [];
			
			var salesData=[
				{label:"Correct", color:"#008000", percent:50},
				{label:"Error", color:"#DC3912", percent:50}
			];
		
			<!-- Gauge script-->
			
			function createGauge(name, label, min, max)
			{
				var config = 
				{
					size: 160,
					label: label,
					min: undefined != min ? min : 0,
					max: undefined != max ? max : 100,
					minorTicks: 5
				}
				
				var range = config.max - config.min;
				config.yellowZones = [{ from: config.min + range*0.75, to: config.min + range*0.9 }];
				config.redZones = [{ from: config.min + range*0.9, to: config.max }];
				
				gauges[name] = new Gauge(name + "GaugeContainer", config);
				gauges[name].render();
			}
			
			function createGauges()
			{
				createGauge("memory", "Completness");
				
			}
			
			function updateGauges()
			{
				for (var key in gauges)
				{
				    var completness =100;
				    
				    $.get('CompletnessController', {
		               option: '1'
		        }, function(responseText) {
		        	 var obj = jQuery.parseJSON(responseText);
		        	 if (obj) {
		                 //  var dd = JSON.parse(result);
		                 
					gauges[key].redraw(obj.completness);
		        	 }else{
		        		 alert('Wrong')
		        	 }
		        });
				}
			}
			
		

		
			//

			function changeData(){
				//gradPie.transition("salespie", randomData(), 160);
				gradPie.transition("quotespie", randomData(), 70);
			}

			function randomData(){
				return salesData.map(function(d){ 
					return {label:d.label, value:d.percent, color:d.color};});
			}
			
			function getRandomValue(gauge)
			{
				var overflow = 0; //10;
				return gauge.config.min - overflow + (gauge.config.max - gauge.config.min + overflow*2) *  Math.random();
			}
			
			function type(d) {
				  d.value = +d.value; // coerce to number
				  return d;
				}

			<!-- Init all charts-->
			
		
			function initialize()
			{
				heatMap();
				barChart();
				createGauges();
				lineChart();
				setInterval(updateGauges, 5000);
				var svg = d3.select("#errorness1").append("svg");
				
				svg.append("g").attr("id","salespie");
				svg.append("g").attr("id","quotespie");
			
				var div = d3.select("#errorness1").append("div").attr("class", "toolTip");
				div.data(randomData());
				
			
			    	gradPie.draw("quotespie", randomData(), 70, 70, 70);
			    	
					 svg.on("mouseover", function(d) {		
						 div.style("left", d3.event.pageX+10+"px");
			                div.style("top", d3.event.pageY-25+"px");
			                div.style("display", "inline-block");
			                div.html("<br>"+d+"%");
				            });					
				        svg.on("mouseout", function(d) {		
				        	   div.style("display", "none");
				        });
				        
				        
				   var data3 = [
				        	  {name: "Acc",    value:  4},
				        	  {name: "Comp",   value:  8},
				        	  {name: "DQ",     value: 15},
				        	  {name: "Diff",   value: 16},
				        	  {name: "-",      value: 23},
				        	  {name: "-",      value: 42}
				        	];
				
				    var width = 500,height =200;

				  //  var x = d3.scale.linear()
				   //     .domain([0, d3.max(data3, function(d){return d.value;})])
				   //     .range([0, width]);
				  
				  var margin = {top: 20, right: 30, bottom: 30, left: 40},
				    width =width - margin.left - margin.right,
				    height = height - margin.top - margin.bottom;

				  
				  var x = d3.scale.ordinal()
   						 .rangeRoundBands([0, width], .1)
				         .domain(data3.map(function(d) { return d.name; }));
					     
				  var y = d3.scale.linear()
				   	  .domain([0, d3.max(data3, function(d){return d.value;})])
   					 .range([height, 0]);
				  	 
				  var xAxis = d3.svg.axis()
				    .scale(x)
				    .orient("bottom");

				  var yAxis = d3.svg.axis()
				      .scale(y)
				      .orient("left");
				  
				  
				    var chart = d3.select(".chart")
				         .attr("width", width + margin.left + margin.right)
					     .attr("height", height + margin.top + margin.bottom)
					     .append("g")
   						 .attr("transform", "translate(" + margin.left + "," + margin.top + ")");
				  
				   
				
				    var bar = chart.selectAll("g")
				        .data(data3)
				        .enter().append("g")
				        .attr("transform", function(d) { return "translate(" + x(d.name) + ",0)";});
					
				    chart.append("g")
				    .attr("class", "x axis")
				    .attr("transform", "translate(0," + height + ")")
				    .call(xAxis);
				    
				    chart.append("g")
				      .attr("class", "y axis")
				      .call(yAxis);

				    
				    bar.append("rect")
				    	.attr("y",function(d) {return y(d.value);})
				        .attr("width",x.rangeBand()/2)
				        .attr("height",  function(d){return height-y(d.value);});

				    bar.append("text")
				        .attr("x",x.rangeBand()/2)
				        .attr("y", function(d) { return y(d.value)+3; })
				        .attr("dy", ".75em")
				        .text(function(d) { return ""; });
				    
				    hart.selectAll(".bar")
				      .data(data)
				    .enter().append("rect")
				      .attr("class", "bar")
				      .attr("x", function(d) { return x(d.name); })
				      .attr("y", function(d) { return y(d.value); })
				      .attr("height", function(d) { return height - y(d.value); })
				      .attr("width", x.rangeBand());
				//gradPie.draw("salespie", randomData(), 100, 100, 160);
				       
			}
			
			var app = angular.module('app', []);

			app.directive("addDiv", function($compile){   
			      return{
			        restrict: 'AE',
			        link: function(scope , element,attr){        
			           element.bind("click", function(e){ 
			           var e = document.getElementById("ChartSelect");
			           var strUser = e.options[e.selectedIndex].text;	   
			           
			           var ecountry = document.getElementById("CountrySelect");
			           var country = ecountry.options[ecountry.selectedIndex].text;
			           
			           var eMetricType = document.getElementById("MetricType");
			           var MetricType =eMetricType.options[eMetricType.selectedIndex].text;
			           
			           var eserviceGroupName = document.getElementById("service_main_group_name");
			           var serviceGroupName =eserviceGroupName.options[eserviceGroupName.selectedIndex].text;
			          
			          
			           var rowNo = document.getElementById("row_no").value;
			           var colNo = document.getElementById("col_no").value;
			      
			           var container;
			           var childNode;
			           if(strUser=="Map"){
			        	   var divTag = "divMap_" + new Date().getTime().toString();
			        	   container =   angular.element(document.querySelector("#container"));
				           childNode = $compile('<div class="box"  ng-draggable="dragOptions"  style = "float:left; width: 25%;"><div id="'+divTag+'""></div></div>')(container);
				           container.append(childNode);
			        	   mapChart(divTag);
			        	   
			           
			           }
			           if(strUser=="Bar"){
			        	   
			        	   $.get('CompletnessController', {
				               option:'2',country:country,service:serviceGroupName,rowno:rowNo,parameter4:colNo
				        }, function(responseText) {
				        	 var obj = jQuery.parseJSON(responseText);
				        	 if (obj) {
				                 //  var dd = JSON.parse(result);
				                 var dataX=[];
				                 var dataY=[];
		

								//	gauges[key].redraw(obj.completness);
									
								 var json = jQuery.parseJSON(responseText);
					        	 if (json) {
		                 //  var dd = JSON.parse(result);
							               for(var i = 0; i < json.length; i++) {
												    var obj = json[i];
													dataX.push(obj.qualityMetricTypeName);
													dataY.push(obj.measure_amt);
													
													
										  }
							            
		        
				        		   var divTag = "divBar_" + new Date().getTime().toString();
					        	   container =   angular.element(document.querySelector("#container"));
						           childNode = $compile('<div class="box"  ng-draggable="dragOptions"  style = "float:left; width: 25%;"><div id="'+divTag+'""></div></div>')(container);
						           container.append(childNode);
						       	   barChart(divTag,dataX,dataY,serviceGroupName);   
								
				        	 }else{
				        		 alert('Wrong')
				        	 }
			        	   
			           }
				        });
			           }
			           if(strUser=="Circle"){
				        	   
				        	 $.get('CompletnessController', {
					               option:'1',parameter1:country,parameter2:MetricType,parameter3:rowNo,parameter4:colNo
					        }, function(responseText) {
					        	 var obj = jQuery.parseJSON(responseText);
					        	 if (obj) {
					                 //  var dd = JSON.parse(result);
					                 
									//	gauges[key].redraw(obj.completness);
										
									
					        		   var divTag = "divDonut_" + new Date().getTime().toString();
						        	   container =   angular.element(document.querySelector("#container"));
							           childNode = $compile('<div class="box"  ng-draggable="dragOptions" ><button onclick="removeChart("'+childNode+'")">X</button><div id="'+divTag+'"" ></div></div>')(container);
							           container.append(childNode);
							           circleChart(divTag,obj.kpi,obj.serviceName,country);   
									
					        	 }else{
					        		 alert('Wrong')
					        	 }
					        });
				        	   
			        	   
			        	   
			        	 
			           }
			           
			        	

			           });
			        }
			    };
			   });

			app.controller('firstCtrl', function($scope){
			 
			   
			});
	function removeChart(divTag){
				document.getElementsByClassName(divTag).remove();
				document.getElementById(divTag).remove();
			}
			
			</script>
			<style>
			.box {
    border: 1px solid black;
    height: 500px;
    float:left;
    width:500px;
}
			</style>
<body ng-app="app">
	<p>Date: <input type="text" id="date1"></p>
	<p>Between: <input type="text" id="date2"></p>
  <div ng-controller="firstCtrl" >
     Chart:  <select id="ChartSelect">
			  <option value="ChartType">Bar</option>
			  <option value="ChartType">Pie</option>
			  <option value="ChartType">Line</option>
			  <option value="ChartType">Heat map</option>
			  <option value="ChartType">Map</option>
			  <option value="ChartType">Circle</option>
		</select>
   	Country:<select id="CountrySelect">
			  <option value="CountryType">EE</option>
			  <option value="CountryType">LT</option>
			  <option value="CountryType">LI</option>
			  <option value="CountryType">GR</option>
	
		</select>
	Service rule
	    <select>
			  <option value="Rule1">1</option>
			  <option value="Rule2">2</option>
			  <option value="Rule3">3</option>
	
	
		</select>
   Service group name
	    <select id="service_main_group_name">
	    
			  <option value="Service">Regulatory Reporting </option>
			  <option value="Service">Supporting Service</option>
			  <option value="Service">Data in - Internal systems by AM areas</option>
			  <option value="Service">Performance Management </option>
			  <option value="Service">Customer Management</option>
			  <option value="Service">Data in - External companies</option>
			  <option value="Service">DW Application </option>
			  <option value="Service">BB Data Warehouse</option>
			  <option value="Service">BI Infrastructure</option>
			  <option value="Service">Data in - Manual preparation </option>
			  <option value="Service">BI Common Analytical Services</option>
			  <option value="Service">Business Line / Product System</option>
			  <option value="Service">Risk Management </option>
			  <option value="Service">Data Warehouse Service</option>
		
	
		</select>
	Metric type
	    <select id="MetricType">
			  <option value="Rule1">DQKPI</option>
			  <option value="Rule2">DQERR</option>
			  <option value="Rule3">3</option>
	
	
		</select>
    Col no: <input type="text" name="col_no" value="5" id="col_no"><br>
    Row no: <input type="text" name="row_no" value="10" id="row_no"><br>	
    <button add-div>Click Me</button>
  	   <div ng-app="test" ng-controller="testCtrl">
        <div id="container"></div>
        </div>
      </div>



</body>
</html>
