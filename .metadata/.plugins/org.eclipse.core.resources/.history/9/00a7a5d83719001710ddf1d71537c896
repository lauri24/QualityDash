<!DOCTYPE html>
<html lang="en">
<head>
  <title>Bootstrap Example</title>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
  <link href="/css/d3.geomap.css" rel="stylesheet">
  <link href="//maxcdn.bootstrapcdn.com/font-awesome/4.1.0/css/font-awesome.min.css" rel="stylesheet">
  <link href="//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.1/styles/default.min.css" rel="stylesheet">
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js"></script>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
  <script src="http://code.jquery.com/jquery-1.10.2.js"
	type="text/javascript"></script>
<script src="js/app-ajax.js" type="text/javascript"></script>
<script type="text/javascript" src="http://mbostock.github.com/d3/d3.js"></script>
<script src="http://d3js.org/d3.v3.min.js"></script>
<script type="text/javascript" src="js/gauge.js"></script>
<script type="text/javascript" src="js/d3.geomap.min.js"></script>
<script type="text/javascript" src="js/gradientPie.js"></script>
 <script type="text/javascript" src="js/world.js"></script>
   <script src="http://d3js.org/topojson.v1.min.js"></script>
    <script src="https://cdn.plot.ly/plotly-latest.min.js"></script>
 <script src="http://datamaps.github.io/scripts/datamaps.world.min.js?v=1"></script>
<!--http://blocks.org/mccannf/1629644-->
	
	<script>
			<!-- Bar chart-->
	
			function barChart(dataX,dataY,colorArray){
				var trace1 = {
						  x:dataX,
						  y: dataY,
						  marker:{
						    color: ['rgba(204,204,204,1)', 'rgba(222,45,38,0.8)', 'rgba(204,204,204,1)', 'rgba(204,204,204,1)', 'rgba(204,204,204,1)']
						  },
						  type: 'bar'
						};
		
						var data = [trace1];
		
						var layout = {
						  title: 'BB Data Warehouse'
						};
		
						Plotly.newPlot('myBar', data, layout);
				
				
			}
			<!-- Line chart-->
			function lineChart(dataX,dataY){		
				var data = [
					  {
					    x: dataX,
					    y: dataY,
					    type: 'scatter'
					  }
					];
				Plotly.newPlot('timeSeries', data);
			}
			
			<!-- Heatmap chart-->
			function heatMap(){
				
				var data = [
					  {
					    z: [[1, 20, 30], [20, 1, 60], [30, 60, 1]],
					    type: 'heatmap'
					  }
					];

					Plotly.plot('myDiv', data);
			}
			
			
			var gauges = [];
			
			var salesData=[
				{label:"Correct", color:"#008000", percent:50},
				{label:"Error", color:"#DC3912", percent:50}
			];
		
			<!-- Gauge script-->
			
			function createGauge(name, label, min, max)
			{
				var config = 
				{
					size: 160,
					label: label,
					min: undefined != min ? min : 0,
					max: undefined != max ? max : 100,
					minorTicks: 5
				}
				
				var range = config.max - config.min;
				config.yellowZones = [{ from: config.min + range*0.75, to: config.min + range*0.9 }];
				config.redZones = [{ from: config.min + range*0.9, to: config.max }];
				
				gauges[name] = new Gauge(name + "GaugeContainer", config);
				gauges[name].render();
			}
			
			function createGauges()
			{
				createGauge("memory", "KPI");
				
			}
			
			function updateGauges()
			{
				for (var key in gauges)
				{
				    var completness =100;
				    
				    $.get('CompletnessController', {
		               option: '1'
		        }, function(responseText) {
		        	 var obj = jQuery.parseJSON(responseText);
		        	 if (obj) {
		                 //  var dd = JSON.parse(result);
		              
						gauges[key].redraw(obj.kpi);
					
		        	 }else{
		        		 alert('Wrong')
		        	 }
		        });
				}
				
				var dataX=[];
				var dataXLine=[];
				var dataY=[];
				var dataYLine=[];
				  $.get('CompletnessController', {
		               option: '2'
		        }, function(responseText) {
		        	 var json = jQuery.parseJSON(responseText);
		        	 if (json) {
		                 //  var dd = JSON.parse(result);
		               for(var i = 0; i < json.length; i++) {
							    var obj = json[i];
								dataX.push(obj.qualityMetricTypeName);
								dataY.push(obj.measure_amt);
								
								
					  }
		            
		        	 	barChart(dataX,dataY);
		        	 }else{
		        		 alert('Wrong')
		        	 }
		        });
				  
				  $.get('CompletnessController', {
		               option: '3'
		        }, function(responseText) {
		        	 var json = jQuery.parseJSON(responseText);
		        	 if (json) {
		                 //  var dd = JSON.parse(result);
		               for(var i = 0; i < json.length; i++) {
							    var obj = json[i];
								
								dataYLine.push(obj.measure_amt);
								dataXLine.push(obj.run_sttd);
								
					  }
		           		lineChart(dataXLine,dataYLine);
		        	 }else{
		        		 alert('Wrong')
		        	 }
		        });
				  
			
				
			}
			
		

		
			//

			function changeData(){
				//gradPie.transition("salespie", randomData(), 160);
				gradPie.transition("quotespie", randomData(), 70);
			}

			function randomData(){
				return salesData.map(function(d){ 
					return {label:d.label, value:d.percent, color:d.color};});
			}
			
			function getRandomValue(gauge)
			{
				var overflow = 0; //10;
				return gauge.config.min - overflow + (gauge.config.max - gauge.config.min + overflow*2) *  Math.random();
			}
			
			function type(d) {
				  d.value = +d.value; // coerce to number
				  return d;
				}

			<!-- Init all charts-->
			function initialize()
			{
				heatMap();
				barChart([1,2,3],['A','B','C']);
				createGauges();
				lineChart([1,2,3],['A','B','C']);
				setInterval(updateGauges, 5000);
				
				        
				
				
				
				       
			}
			
			
			
		
			
			</script>
  <style>

    /* Set height of the grid so .sidenav can be 100% (adjust as needed) */
    .row.content {height: 550px}
    
    /* Set gray background color and 100% height */
    .chart rect {
  fill: steelblue;
}
#drag_me{
    -webkit-user-drag: element;
}
axis text {
  font: 10px sans-serif;
}

.axis path,
.axis line {
  fill: none;
  stroke: #000;
  shape-rendering: crispEdges;
}
	.chart text {
 		 fill: black;
  		 font: 10px sans-serif;
         text-anchor: middle;
   }
    .sidenav {
      background-color: #f1f1f1;
      height: 100%;
    }

    /* On small screens, set height to 'auto' for the grid */
    @media screen and (max-width: 767px) {
      .row.content {height: auto;} 
    }
    
    [draggable=true] {
    cursor: move;
}

.resizable {
    overflow: scroll;
    resize: both;
    max-width: 300px;
    max-height: 460px;
}
  </style>
</head>
<body onload="initialize()">

<nav class="navbar navbar-inverse visible-xs">
  <div class="container-fluid">
    <div class="navbar-header">
      <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#myNavbar">
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>                        
      </button>
      <a class="navbar-brand" href="#">Dashboard</a>
    </div>
    <div class="collapse navbar-collapse" id="myNavbar">
      <ul class="nav navbar-nav">
        <li class="active"><a href="#">EE Dashboard</a></li>
      </ul>
    </div>
  </div>
</nav>

<div class="container-fluid">
  <div class="row content">
    <div class="col-sm-3 sidenav hidden-xs">
      <h2>Swedbank dashboard</h2>
      <ul class="nav nav-pills nav-stacked">
        <li class="active"><a href="#section1">EE Dashboard</a></li>
      </ul><br>
    </div>
    <br>
    
    <div class="col-sm-9">
      <div class="well">
        <h4>Dashboard</h4>
        <p>Generate new chart</p>
        <select>
			  <option value="Bar">Bar</option>
			  <option value="Pie">Pie</option>
			  <option value="Line">Line</option>
			  <option value="HeatMap">Heat map</option>
		</select>
        <div id="flip">Click to slide down panel</div>
		<div id="panel">Hello world!</div>
        
      </div>
      <div class="row">
        <div class="col-sm-3" draggable="true" class="resizable" id="drag_me">
          <div class="well">
            <h4>BB Data Warehouse</h4>
            <span id="memoryGaugeContainer"></span>
          </div>
        </div>
        <div class="col-sm-3" draggable="true" class="resizable" id="drag_me">
          <div class="well">
            <h4>Char2</h4>
              <div id="errorness1"></div>
          </div>
        </div>
        <div class="col-sm-3" draggable="true" class="resizable" id="drag_me">
          <div class="well">
            <h4>Char3</h4>
         
          <div><svg class="chart"></svg></div>
          </div>
        </div>
        
      <div class="row" >
        <div class="col-sm-4" draggable="true" class="resizable" id="drag_me">
          <div class="well">
          <div id="myDiv"><!-- Plotly chart will be drawn inside this DIV --></div>
          </div>
        </div>
        <div class="col-sm-4" draggable="true" class="resizable" id="drag_me">
          <div class="well">
           <div id="timeSeries"><!-- Plotly chart will be drawn inside this DIV --></div>
    
          </div>
        </div>
        <div class="col-sm-4" draggable="true" class="resizable" id="drag_me">
          <div class="well">
              <div id="myBar"><!-- Plotly chart will be drawn inside this DIV --></div>
          </div>
        </div>
      </div>
      <div class="row">
        <div class="col-sm-8">
          <div class="well">
            <p>Text</p> 
          </div>
        </div>
        <div class="col-sm-4">
          <div class="well">
            <p>Text</p> 
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

</body>
</html>
